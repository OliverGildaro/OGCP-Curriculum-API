// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OGCP.Curriculum.API.repositories;

#nullable disable

namespace OGCP.Curriculum.API.Migrations
{
    [DbContext(typeof(DbProfileContext))]
    partial class DbProfileContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OGCP.Curriculum.API.models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EducationType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QualifiedProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("QualifiedProfileId");

                    b.ToTable("Education");

                    b.HasDiscriminator<string>("EducationType").HasValue("BaseEducation");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.JobExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QualifiedProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("QualifiedProfileId");

                    b.ToTable("JobExperience");

                    b.HasDiscriminator().HasValue("JobExperience");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.PersonalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId")
                        .IsUnique()
                        .HasFilter("[ProfileId] IS NOT NULL");

                    b.ToTable("PersonalInfo");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Visibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profile");

                    b.HasDiscriminator().HasValue("Profile");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.DegreeEducation", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.models.Education");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("DegreeEducation");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.ResearchEducation", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.models.Education");

                    b.Property<string>("ProjectTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("StudentProfileId");

                    b.HasDiscriminator().HasValue("ResearchEducation");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.InternshipExperience", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.models.JobExperience");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentProfileId")
                        .HasColumnType("int");

                    b.HasIndex("StudentProfileId");

                    b.HasDiscriminator().HasValue("InternshipExperience");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.WorkExperience", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.models.JobExperience");

                    b.Property<int?>("GeneralProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("GeneralProfileId");

                    b.HasDiscriminator().HasValue("WorkExperience");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.GeneralProfile", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.models.Profile");

                    b.Property<string>("PersonalGoals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("GeneralProfile");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.QualifiedProfile", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.models.Profile");

                    b.Property<string>("DesiredJobRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("QualifiedProfile");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.StudentProfile", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.models.Profile");

                    b.Property<string>("CareerGoals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("StudentProfile");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.Education", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.models.QualifiedProfile", null)
                        .WithMany("Education")
                        .HasForeignKey("QualifiedProfileId");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.JobExperience", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.models.QualifiedProfile", null)
                        .WithMany("WorkExperience")
                        .HasForeignKey("QualifiedProfileId");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.Language", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.models.Profile", null)
                        .WithMany("LanguagesSpoken")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.PersonalInfo", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.models.Profile", "Profile")
                        .WithOne("PersonalInfo")
                        .HasForeignKey("OGCP.Curriculum.API.models.PersonalInfo", "ProfileId");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.Skill", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.models.Profile", null)
                        .WithMany("Skills")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.ResearchEducation", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.models.StudentProfile", null)
                        .WithMany("ResearchExperiences")
                        .HasForeignKey("StudentProfileId");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.InternshipExperience", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.models.StudentProfile", null)
                        .WithMany("Internships")
                        .HasForeignKey("StudentProfileId");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.WorkExperience", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.models.GeneralProfile", null)
                        .WithMany("WorkExperience")
                        .HasForeignKey("GeneralProfileId");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.Profile", b =>
                {
                    b.Navigation("LanguagesSpoken");

                    b.Navigation("PersonalInfo")
                        .IsRequired();

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.GeneralProfile", b =>
                {
                    b.Navigation("WorkExperience");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.QualifiedProfile", b =>
                {
                    b.Navigation("Education");

                    b.Navigation("WorkExperience");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.models.StudentProfile", b =>
                {
                    b.Navigation("Internships");

                    b.Navigation("ResearchExperiences");
                });
#pragma warning restore 612, 618
        }
    }
}
