// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OGCP.Curriculum.API.repositories;

#nullable disable

namespace OGCP.Curriculum.API.Migrations
{
    [DbContext(typeof(DbProfileContext))]
    [Migration("20241118193913_migAdded")]
    partial class migAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EducationQualifiedProfile", b =>
                {
                    b.Property<int>("EducationsId")
                        .HasColumnType("int");

                    b.Property<int>("QualifiedProfileId")
                        .HasColumnType("int");

                    b.HasKey("EducationsId", "QualifiedProfileId");

                    b.HasIndex("QualifiedProfileId");

                    b.ToTable("EducationQualifiedProfile");
                });

            modelBuilder.Entity("LanguageProfile", b =>
                {
                    b.Property<int>("LanguagesSpokenId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("LanguagesSpokenId", "ProfileId");

                    b.HasIndex("ProfileId");

                    b.ToTable("LanguageProfile");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.DetailInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Emails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("DetailInfo");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EducationType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Education");

                    b.HasDiscriminator<string>("EducationType").HasValue("BaseEducation");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.JobExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QualifiedProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("QualifiedProfileId");

                    b.ToTable("JobExperience");

                    b.HasDiscriminator().HasValue("JobExperience");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Checksum")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("varbinary(max)")
                        .HasComputedColumnSql("CONVERT(VARBINARY(1024),CHECKSUM([Name],[Level]))");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<bool>("IsPublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Visibility")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("LastName");

                    b.ToTable("Profile");

                    b.HasDiscriminator().HasValue("Profile");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ResearchEducationStudentProfile", b =>
                {
                    b.Property<int>("EducationsId")
                        .HasColumnType("int");

                    b.Property<int>("StudentProfileId")
                        .HasColumnType("int");

                    b.HasKey("EducationsId", "StudentProfileId");

                    b.HasIndex("StudentProfileId");

                    b.ToTable("ResearchEducationStudentProfile");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.DegreeEducation", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.domainmodel.Education");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("DegreeEducation");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.ResearchEducation", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.domainmodel.Education");

                    b.Property<string>("ProjectTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supervisor")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ResearchEducation");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.InternshipExperience", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.domainmodel.JobExperience");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentProfileId")
                        .HasColumnType("int");

                    b.HasIndex("StudentProfileId");

                    b.HasDiscriminator().HasValue("InternshipExperience");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.WorkExperience", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.domainmodel.JobExperience");

                    b.Property<int?>("GeneralProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("GeneralProfileId");

                    b.HasDiscriminator().HasValue("WorkExperience");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.GeneralProfile", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.domainmodel.Profile");

                    b.Property<string>("PersonalGoals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("GeneralProfile");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.QualifiedProfile", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.domainmodel.Profile");

                    b.Property<string>("DesiredJobRole")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasDiscriminator().HasValue("QualifiedProfile");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.StudentProfile", b =>
                {
                    b.HasBaseType("OGCP.Curriculum.API.domainmodel.Profile");

                    b.Property<string>("CareerGoals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("StudentProfile");
                });

            modelBuilder.Entity("EducationQualifiedProfile", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.domainmodel.Education", null)
                        .WithMany()
                        .HasForeignKey("EducationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OGCP.Curriculum.API.domainmodel.QualifiedProfile", null)
                        .WithMany()
                        .HasForeignKey("QualifiedProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LanguageProfile", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.domainmodel.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguagesSpokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OGCP.Curriculum.API.domainmodel.Profile", null)
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.DetailInfo", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.domainmodel.Profile", null)
                        .WithOne("PersonalInfo")
                        .HasForeignKey("OGCP.Curriculum.API.domainmodel.DetailInfo", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.JobExperience", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.domainmodel.QualifiedProfile", null)
                        .WithMany("Experiences")
                        .HasForeignKey("QualifiedProfileId");
                });

            modelBuilder.Entity("ResearchEducationStudentProfile", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.domainmodel.ResearchEducation", null)
                        .WithMany()
                        .HasForeignKey("EducationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OGCP.Curriculum.API.domainmodel.StudentProfile", null)
                        .WithMany()
                        .HasForeignKey("StudentProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.InternshipExperience", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.domainmodel.StudentProfile", null)
                        .WithMany("Experiences")
                        .HasForeignKey("StudentProfileId");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.WorkExperience", b =>
                {
                    b.HasOne("OGCP.Curriculum.API.domainmodel.GeneralProfile", null)
                        .WithMany("Experiences")
                        .HasForeignKey("GeneralProfileId");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.Profile", b =>
                {
                    b.Navigation("PersonalInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.GeneralProfile", b =>
                {
                    b.Navigation("Experiences");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.QualifiedProfile", b =>
                {
                    b.Navigation("Experiences");
                });

            modelBuilder.Entity("OGCP.Curriculum.API.domainmodel.StudentProfile", b =>
                {
                    b.Navigation("Experiences");
                });
#pragma warning restore 612, 618
        }
    }
}
